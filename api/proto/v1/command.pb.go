// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: api/proto/v1/command.proto

package middlewarev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Command represents a business command
type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_api_proto_v1_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_command_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Command) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SubmitCommandRequest is the request for submitting a command
type SubmitCommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitCommandRequest) Reset() {
	*x = SubmitCommandRequest{}
	mi := &file_api_proto_v1_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCommandRequest) ProtoMessage() {}

func (x *SubmitCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCommandRequest.ProtoReflect.Descriptor instead.
func (*SubmitCommandRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_command_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitCommandRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubmitCommandRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SubmitCommandResponse is the response for command submission
type SubmitCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitCommandResponse) Reset() {
	*x = SubmitCommandResponse{}
	mi := &file_api_proto_v1_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCommandResponse) ProtoMessage() {}

func (x *SubmitCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCommandResponse.ProtoReflect.Descriptor instead.
func (*SubmitCommandResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_command_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitCommandResponse) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

// GetCommandStatusRequest is the request for getting command status
type GetCommandStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommandStatusRequest) Reset() {
	*x = GetCommandStatusRequest{}
	mi := &file_api_proto_v1_command_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommandStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandStatusRequest) ProtoMessage() {}

func (x *GetCommandStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_command_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandStatusRequest.ProtoReflect.Descriptor instead.
func (*GetCommandStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_command_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommandStatusRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

// GetCommandStatusResponse is the response with command status
type GetCommandStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommandStatusResponse) Reset() {
	*x = GetCommandStatusResponse{}
	mi := &file_api_proto_v1_command_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommandStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandStatusResponse) ProtoMessage() {}

func (x *GetCommandStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_command_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandStatusResponse.ProtoReflect.Descriptor instead.
func (*GetCommandStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_command_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommandStatusResponse) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *GetCommandStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetCommandStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_api_proto_v1_command_proto protoreflect.FileDescriptor

const file_api_proto_v1_command_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/proto/v1/command.proto\x12\rmiddleware.v1\"G\n" +
	"\aCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"D\n" +
	"\x14SubmitCommandRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"6\n" +
	"\x15SubmitCommandResponse\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\"8\n" +
	"\x17GetCommandStatusRequest\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\"g\n" +
	"\x18GetCommandStatusResponse\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error2\xd5\x01\n" +
	"\x0eCommandService\x12\\\n" +
	"\rSubmitCommand\x12#.middleware.v1.SubmitCommandRequest\x1a$.middleware.v1.SubmitCommandResponse\"\x00\x12e\n" +
	"\x10GetCommandStatus\x12&.middleware.v1.GetCommandStatusRequest\x1a'.middleware.v1.GetCommandStatusResponse\"\x00BFZDgithub.com/linkmeAman/universal-middleware/api/proto/v1;middlewarev1b\x06proto3"

var (
	file_api_proto_v1_command_proto_rawDescOnce sync.Once
	file_api_proto_v1_command_proto_rawDescData []byte
)

func file_api_proto_v1_command_proto_rawDescGZIP() []byte {
	file_api_proto_v1_command_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_command_proto_rawDesc), len(file_api_proto_v1_command_proto_rawDesc)))
	})
	return file_api_proto_v1_command_proto_rawDescData
}

var file_api_proto_v1_command_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_v1_command_proto_goTypes = []any{
	(*Command)(nil),                  // 0: middleware.v1.Command
	(*SubmitCommandRequest)(nil),     // 1: middleware.v1.SubmitCommandRequest
	(*SubmitCommandResponse)(nil),    // 2: middleware.v1.SubmitCommandResponse
	(*GetCommandStatusRequest)(nil),  // 3: middleware.v1.GetCommandStatusRequest
	(*GetCommandStatusResponse)(nil), // 4: middleware.v1.GetCommandStatusResponse
}
var file_api_proto_v1_command_proto_depIdxs = []int32{
	1, // 0: middleware.v1.CommandService.SubmitCommand:input_type -> middleware.v1.SubmitCommandRequest
	3, // 1: middleware.v1.CommandService.GetCommandStatus:input_type -> middleware.v1.GetCommandStatusRequest
	2, // 2: middleware.v1.CommandService.SubmitCommand:output_type -> middleware.v1.SubmitCommandResponse
	4, // 3: middleware.v1.CommandService.GetCommandStatus:output_type -> middleware.v1.GetCommandStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_v1_command_proto_init() }
func file_api_proto_v1_command_proto_init() {
	if File_api_proto_v1_command_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_command_proto_rawDesc), len(file_api_proto_v1_command_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_command_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_command_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_command_proto_msgTypes,
	}.Build()
	File_api_proto_v1_command_proto = out.File
	file_api_proto_v1_command_proto_goTypes = nil
	file_api_proto_v1_command_proto_depIdxs = nil
}
